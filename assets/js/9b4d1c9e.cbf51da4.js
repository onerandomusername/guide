"use strict";(self.webpackChunkdisnake_guide=self.webpackChunkdisnake_guide||[]).push([[97],{3905:function(e,n,t){t.d(n,{Zo:function(){return m},kt:function(){return u}});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var d=a.createContext({}),c=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},m=function(e){var n=c(e.components);return a.createElement(d.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,s=e.originalType,d=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),p=c(t),u=o,h=p["".concat(d,".").concat(u)]||p[u]||l[u]||s;return t?a.createElement(h,r(r({ref:n},m),{},{components:t})):a.createElement(h,r({ref:n},m))}));function u(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=t.length,r=new Array(s);r[0]=p;var i={};for(var d in n)hasOwnProperty.call(n,d)&&(i[d]=n[d]);i.originalType=e,i.mdxType="string"==typeof e?e:o,r[1]=i;for(var c=2;c<s;c++)r[c]=t[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},856:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return c},default:function(){return g},frontMatter:function(){return d},metadata:function(){return m},toc:function(){return p}});var a,o=t(7462),s=t(3366),r=(t(7294),t(3905)),i=["components"],d={description:"A list of FAQs regarding the 'commands', 'tasks' and 'ui' extensions.",keywords:["disnake","bot","guide","tutorial","python","extensions"]},c="Extensions",m={unversionedId:"faq/extensions",id:"faq/extensions",title:"Extensions",description:"A list of FAQs regarding the 'commands', 'tasks' and 'ui' extensions.",source:"@site/docs/faq/extensions.mdx",sourceDirName:"faq",slug:"/faq/extensions",permalink:"/faq/extensions",editUrl:"https://github.com/DisnakeDev/guide/edit/main/guide/docs/faq/extensions.mdx",tags:[],version:"current",lastUpdatedBy:"Abhigyan Trips",lastUpdatedAt:1646733927,formattedLastUpdatedAt:"3/8/2022",frontMatter:{description:"A list of FAQs regarding the 'commands', 'tasks' and 'ui' extensions.",keywords:["disnake","bot","guide","tutorial","python","extensions"]},sidebar:"guideSidebar",previous:{title:"Coroutines",permalink:"/faq/coroutines"},next:{title:"Good practices",permalink:"/faq/good-practices"}},l={},p=[{value:"Why does <code>on_message</code> make my commands stop working?",id:"why-does-on_message-make-my-commands-stop-working",level:3},{value:"Why do my arguments require quotes?",id:"why-do-my-arguments-require-quotes",level:3},{value:"How do I get the original <code>message</code>?",id:"how-do-i-get-the-original-message",level:3},{value:"How do I make a subcommand?",id:"how-do-i-make-a-subcommand",level:3},{value:"Which components can I use with modals?",id:"which-components-can-i-use-with-modals",level:3},{value:"Do modals support autocomplete?",id:"do-modals-support-autocomplete",level:3}],u=(a="DocsLink",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)}),h={toc:p};function g(e){var n=e.components,t=(0,s.Z)(e,i);return(0,r.kt)("wrapper",(0,o.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"extensions"},"Extensions"),(0,r.kt)("p",null,"Questions regarding ",(0,r.kt)("inlineCode",{parentName:"p"},"disnake.ext.commands"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"disnake.ext.tasks")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"disnake.ui")," belong here."),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"This content has been taken directly from the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.disnake.dev/en/latest/faq.html"},"documentation"),", and inherited from ",(0,r.kt)("inlineCode",{parentName:"p"},"discord.py"),". It will most likely be rewritten in the future."))),(0,r.kt)("h3",{id:"why-does-on_message-make-my-commands-stop-working"},"Why does ",(0,r.kt)("inlineCode",{parentName:"h3"},"on_message")," make my commands stop working?"),(0,r.kt)("p",null,"Overriding the default provided ",(0,r.kt)("inlineCode",{parentName:"p"},"on_message")," forbids any extra commands from running. To fix this, add a\n",(0,r.kt)("inlineCode",{parentName:"p"},"bot.process_commands(message)")," line at the end of your ",(0,r.kt)("inlineCode",{parentName:"p"},"on_message"),". For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"@bot.event\nasync def on_message(message):\n    # Do some extra stuff here\n\n    await bot.process_commands(message)\n")),(0,r.kt)("p",null,"Alternatively, you can place your ",(0,r.kt)("inlineCode",{parentName:"p"},"on_message")," logic into a ",(0,r.kt)("strong",{parentName:"p"},"listener"),". In this setup, you should not\nmanually call ",(0,r.kt)("inlineCode",{parentName:"p"},"bot.process_commands()"),". This also allows you to do multiple things asynchronously in response\nto a message. Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'@bot.listen("on_message")\nasync def whatever_you_want_to_call_it(message):\n    await do_stuff_here()\n    # Do not process commands here\n')),(0,r.kt)("h3",{id:"why-do-my-arguments-require-quotes"},"Why do my arguments require quotes?"),(0,r.kt)("p",null,"In a simple command defined as:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"@bot.command()\nasync def echo(ctx, message: str):\n    await ctx.send(message)\n")),(0,r.kt)("p",null,"Calling it via ",(0,r.kt)("inlineCode",{parentName:"p"},"?echo a b c")," will only fetch the first argument and disregard the rest. To fix this you should either call\nit via ",(0,r.kt)("inlineCode",{parentName:"p"},'?echo "a b c"'),' or change the signature to have "consume rest" behaviour. Example:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"@bot.command()\nasync def echo(ctx, *, message: str):\n    await ctx.send(message)\n")),(0,r.kt)("p",null,"This will allow you to use ",(0,r.kt)("inlineCode",{parentName:"p"},"?echo a b c")," without needing the quotes."),(0,r.kt)("h3",{id:"how-do-i-get-the-original-message"},"How do I get the original ",(0,r.kt)("inlineCode",{parentName:"h3"},"message"),"?"),(0,r.kt)("p",null,"The ",(0,r.kt)(u,{ext:"commands",reference:"disnake.ext.commands.Context",mdxType:"DocsLink"})," contains an attribute, ",(0,r.kt)(u,{ext:"commands",reference:"disnake.ext.commands.Context.message",mdxType:"DocsLink"},"message")," to get the original\nmessage."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'@bot.command()\nasync def length(ctx):\n    await ctx.send(f"Your message is {len(ctx.message.content)} characters long.")\n')),(0,r.kt)("h3",{id:"how-do-i-make-a-subcommand"},"How do I make a subcommand?"),(0,r.kt)("p",null,"Use the ",(0,r.kt)(u,{ext:"commands",reference:"disnake.ext.commands.group",mdxType:"DocsLink"},"group()")," decorator. This will transform the callback into a ",(0,r.kt)(u,{ext:"commands",reference:"disnake.ext.commands.Group",mdxType:"DocsLink"}),' which will allow you to add commands into\nthe group operating as "subcommands". These groups can be arbitrarily nested as well.'),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'@bot.group()\nasync def git(ctx):\n    if ctx.invoked_subcommand is None:\n        await ctx.send("Invalid git command passed...")\n\n\n@git.command()\nasync def push(ctx, remote: str, branch: str):\n    await ctx.send(f"Pushing to {remote} {branch}.")\n')),(0,r.kt)("p",null,"This could then be used as ",(0,r.kt)("inlineCode",{parentName:"p"},"?git push origin master"),"."),(0,r.kt)("h3",{id:"which-components-can-i-use-with-modals"},"Which components can I use with modals?"),(0,r.kt)("p",null,"The only component that can currently be used with modals is ",(0,r.kt)(u,{reference:"disnake.ui.TextInput",mdxType:"DocsLink"},"TextInput"),". The API does not have integration for any other inputs as of now."),(0,r.kt)("h3",{id:"do-modals-support-autocomplete"},"Do modals support autocomplete?"),(0,r.kt)("p",null,"Modals (or text inputs) do not support autocomplete. This is a Discord limitation."))}g.isMDXComponent=!0}}]);